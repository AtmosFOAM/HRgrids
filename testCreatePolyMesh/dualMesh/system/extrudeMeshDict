/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  1.6                                   |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      extrudeProperties;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

// What to extrude:
//      patch   : from patch of another case ('sourceCase')
//      mesh    : as above but with original case included
//      surface : from externally read surface

constructFrom patch;

// If construct from patch/mesh:
sourceCase "dualMeshTmp";
sourcePatches (originalPatch);

// If construct from patch: patch to use for back (can be same as sourcePatch)
exposedPatchName originalPatch;

// Flip surface normals before usage.
flipNormals true;

//- Extrudes into sphere around (0 0 0)
extrudeModel        linearRadial;

//- Extrudes into sphere with grading according to pressure (atmospherics)
//extrudeModel        sigmaRadial;

nLayers             1;
expansionRatio      1.0;


linearRadialCoeffs
{
    R        6373220;
    Rsurface 6371220;
}

// Do front and back need to be merged? Usually only makes sense for 360
// degree wedges.
mergeFaces false;


// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

